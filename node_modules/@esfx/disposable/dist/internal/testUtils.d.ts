import { Deprecation } from "./utils";
declare type WeakAnyKeyOf<T> = (T extends unknown ? keyof T : never) | (keyof any) & Record<never, never>;
declare global {
    namespace jest {
        interface Matchers<R, T = {}> {
            toBeTypeof(typeTag: "string" | "number" | "boolean" | "object" | "function" | "undefined" | "symbol" | "bigint" | string & Record<never, never>): R;
            toHaveInheritedProperty(key: WeakAnyKeyOf<T>): R;
            toHaveOwnProperty(key: WeakAnyKeyOf<T>): R;
            toHaveOwnMethod(key: WeakAnyKeyOf<T>): R;
            toHaveOwnGetter(key: WeakAnyKeyOf<T>): R;
            toHaveOwnSetter(key: WeakAnyKeyOf<T>): R;
            toHaveWritableProperty(key: WeakAnyKeyOf<T>): R;
            toHaveNonWritableProperty(key: WeakAnyKeyOf<T>): R;
            toHaveEnumerableProperty(key: WeakAnyKeyOf<T>): R;
            toHaveNonEnumerableProperty(key: WeakAnyKeyOf<T>): R;
            toHaveConfigurableProperty(key: WeakAnyKeyOf<T>): R;
            toHaveNonConfigurableProperty(key: WeakAnyKeyOf<T>): R;
        }
    }
}
export declare function disableDeprecations(deprecations: Deprecation[]): void;
export {};
//# sourceMappingURL=testUtils.d.ts.map