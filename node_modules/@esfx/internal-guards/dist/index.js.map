{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;EAcE;;;AAIF,aAAa;AACb,SAAgB,UAAU,CAAC,KAAc;IACrC,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;AACvC,CAAC;AAFD,gCAEC;AAED,aAAa;AACb,SAAgB,qBAAqB,CAAC,KAAc;IAChD,OAAO,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,SAAS,CAAC;AAC9D,CAAC;AAFD,sDAEC;AAED,aAAa;AACb,SAAgB,QAAQ,CAAC,KAAc;IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI;WAC3C,OAAO,KAAK,KAAK,UAAU,CAAC;AACvC,CAAC;AAHD,4BAGC;AAQD,aAAa;AACb,SAAgB,UAAU,CAAC,KAAc,EAAE,IAAc;IACrD,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,CAAC;AACtD,CAAC;AAFD,gCAEC;AAED,aAAa;AACb,SAAgB,SAAS,CAAC,KAAc;IACpC,OAAO,KAAK,KAAK,IAAI;WACd,KAAK,KAAK,SAAS,CAAC;AAC/B,CAAC;AAHD,8BAGC;AAED,aAAa;AACb,SAAgB,SAAS,CAAI,KAAQ;IACjC,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AACjD,CAAC;AAFD,8BAEC;AAED,aAAa;AACb,SAAgB,UAAU,CAAC,KAAc;IACrC,OAAO,KAAK,KAAK,SAAS;WACnB,KAAK,KAAK,IAAI;WACd,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC;AAJD,gCAIC;AAED,aAAa;AACb,SAAgB,eAAe,CAAC,KAAc;IAC1C,OAAO,KAAK,KAAK,SAAS;WACnB,KAAK,KAAK,IAAI;WACd,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AACjD,CAAC;AAJD,0CAIC;AAED,gBAAgB;AAChB,SAAgB,UAAU,CAAC,KAAc;IACrC,OAAO,QAAQ,CAAC,KAAK,CAAC;WACf,UAAU,CAAE,KAA2B,CAAC,IAAI,CAAC;WAC7C,qBAAqB,CAAE,KAA2B,CAAC,KAAK,CAAC;WACzD,qBAAqB,CAAE,KAA2B,CAAC,MAAM,CAAC;WAC1D,qBAAqB,CAAE,KAAmC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxF,CAAC;AAND,gCAMC;AAED,aAAa;AACb,SAAgB,QAAQ,CAAC,KAAc;IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AAFD,4BAEC;AAED,aAAa;AACb,SAAgB,SAAS,CAAC,KAAc;IACpC,OAAO,OAAO,KAAK,KAAK,SAAS,CAAC;AACtC,CAAC;AAFD,8BAEC;AAED,aAAa;AACb,SAAgB,QAAQ,CAAC,KAAc;IACnC,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AAFD,4BAEC;AAED,aAAa;AACb,SAAgB,aAAa,CAAC,KAAc;IACxC,OAAO,OAAO,KAAK,KAAK,QAAQ;WACzB,OAAO,KAAK,KAAK,QAAQ;WACzB,OAAO,KAAK,KAAK,QAAQ,CAAC;AACrC,CAAC;AAJD,sCAIC;AAED,aAAa;AACb,SAAgB,WAAW,CAAC,KAAc;IACtC,OAAO,OAAO,KAAK,KAAK,UAAU;WAC3B,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC;AACzD,CAAC;AAHD,kCAGC","sourcesContent":["/*!\r\n   Copyright 2019 Ron Buckton\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nimport { Constructor, AbstractConstructor } from \"@esfx/type-model\";\r\n\r\n/*@internal*/\r\nexport function isFunction(value: unknown): value is Function {\r\n    return typeof value === \"function\";\r\n}\r\n\r\n/*@internal*/\r\nexport function isFunctionOrUndefined(value: unknown): value is Function | undefined {\r\n    return typeof value === \"function\" || value === undefined;\r\n}\r\n\r\n/*@internal*/\r\nexport function isObject(value: unknown): value is object {\r\n    return typeof value === \"object\" && value !== null\r\n        || typeof value === \"function\";\r\n}\r\n\r\ntype AbstractInstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any;\r\n\r\n/*@internal*/\r\nexport function isInstance<C extends Constructor>(value: unknown, ctor: C): value is InstanceType<C>;\r\n/*@internal*/\r\nexport function isInstance<C extends AbstractConstructor>(value: unknown, ctor: C): value is AbstractInstanceType<C>;\r\n/*@internal*/\r\nexport function isInstance(value: unknown, ctor: Function) {\r\n    return !isMissing(value) && value instanceof ctor;\r\n}\r\n\r\n/*@internal*/\r\nexport function isMissing(value: unknown): value is null | undefined {\r\n    return value === null\r\n        || value === undefined;\r\n}\r\n\r\n/*@internal*/\r\nexport function isDefined<T>(value: T): value is NonNullable<T> {\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\n/*@internal*/\r\nexport function isIterable(value: unknown): value is Iterable<any> {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.iterator in Object(value);\r\n}\r\n\r\n/*@internal*/\r\nexport function isAsyncIterable(value: unknown): value is AsyncIterable<any> {\r\n    return value !== undefined\r\n        && value !== null\r\n        && Symbol.asyncIterator in Object(value);\r\n}\r\n\r\n/** @internal */\r\nexport function isIterator(value: unknown): value is Iterator<unknown> {\r\n    return isObject(value)\r\n        && isFunction((value as Iterator<unknown>).next)\r\n        && isFunctionOrUndefined((value as Iterator<unknown>).throw)\r\n        && isFunctionOrUndefined((value as Iterator<unknown>).return)\r\n        && isFunctionOrUndefined((value as IterableIterator<unknown>)[Symbol.iterator]);\r\n}\r\n\r\n/*@internal*/\r\nexport function isNumber(value: unknown): value is number {\r\n    return typeof value === \"number\";\r\n}\r\n\r\n/*@internal*/\r\nexport function isBoolean(value: unknown): value is boolean {\r\n    return typeof value === \"boolean\";\r\n}\r\n\r\n/*@internal*/\r\nexport function isString(value: unknown): value is string {\r\n    return typeof value === \"string\";\r\n}\r\n\r\n/*@internal*/\r\nexport function isPropertyKey(value: unknown): value is PropertyKey {\r\n    return typeof value === \"string\"\r\n        || typeof value === \"symbol\"\r\n        || typeof value === \"number\";\r\n}\r\n\r\n/*@internal*/\r\nexport function isPrimitive(value: unknown): value is string | symbol | number | bigint | boolean | undefined | null {\r\n    return typeof value !== \"function\"\r\n        && (typeof value !== \"object\" || value === null);\r\n}\r\n"]}